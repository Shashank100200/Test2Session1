 
 gcc -g p1original.c
p1original.c: In function ‘output’:
p1original.c:14:34: warning: format ‘%f’ expects a matching ‘double’ argument [-Wformat=]
   printf("the distance between (%f,%f) and (%f,%f) is %f,x1,x2,y1,y2");
                                 ~^
p1original.c:14:37: warning: format ‘%f’ expects a matching ‘double’ argument [-Wformat=]
   printf("the distance between (%f,%f) and (%f,%f) is %f,x1,x2,y1,y2");
                                    ~^
p1original.c:14:46: warning: format ‘%f’ expects a matching ‘double’ argument [-Wformat=]
   printf("the distance between (%f,%f) and (%f,%f) is %f,x1,x2,y1,y2");
                                             ~^
p1original.c:14:49: warning: format ‘%f’ expects a matching ‘double’ argument [-Wformat=]
   printf("the distance between (%f,%f) and (%f,%f) is %f,x1,x2,y1,y2");
                                                ~^
p1original.c:14:56: warning: format ‘%f’ expects a matching ‘double’ argument [-Wformat=]
   printf("the distance between (%f,%f) and (%f,%f) is %f,x1,x2,y1,y2");
                                                       ~^
p1original.c: In function ‘main’:
p1original.c:19:9: warning: passing argument 1 of ‘input’ from incompatible pointer type [-Wincompatible-pointer-types]
   input(&x1,&x2,&y1,&y2);
         ^
p1original.c:3:6: note: expected ‘float *’ but argument is of type ‘int *’
 
 gcc -g p1original.c
p1original.c: In function ‘main’:
p1original.c:19:9: warning: passing argument 1 of ‘input’ from incompatible pointer type [-Wincompatible-pointer-types]
   input(&x1,&x2,&y1,&y2);
         ^
p1original.c:3:6: note: expected ‘float *’ but argument is of type ‘int *’
 void input(float*x1,float*y1,float*x2,float*y2)
 gcc -g p1original.c -lm
p1original.c: In function ‘main’:
p1original.c:19:9: warning: passing argument 1 of ‘input’ from incompatible pointer type [-Wincompatible-pointer-types]
   input(&x1,&x2,&y1,&y2);
         ^
p1original.c:3:6: note: expected ‘float *’ but argument is of type ‘int *’
 void input(float*x1,float*y1,float*x2,float*y2)
      ^~~~~
 gccgcc..gc gcc -g p1original.c -lm
your program is already running, please stop it first
your program is already running, please stop it first
your program is already running, please stop it first
your program is already running, please stop it first
p1original.c: In function ‘main’:
p1original.c:19:9: warning: passing argument 1 of ‘input’ from incompatible pointer type [-Wincompatible-pointer-types]
   input(&x1,&x2,&y1,&y2);
         ^
p1original.c:3:6: note: expected ‘float *’ but argument is of type ‘int *’
 void input(float *x1,float *y1,float *x2,float *y2)
      ^~~~~
 gcc -g p1original.c -lm
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0x8f0: file p1original.c, line 17.
(gdb) r
Starting program: /home/runner/Test2Session1/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p1original.c:17
17  {
(gdb) n
19    input(&x1,&x2,&y1,&y2);
(gdb) s
input (x1=0x7fffa8e8f604, y1=0x7fffa8e8f608, x2=0x7fffa8e8f60c, y2=0x7fffa8e8f610)
    at p1original.c:5
5   printf("enter the x1,x2,y1,y2 co-ordinates\n");
(gdb) n
enter the x1,x2,y1,y2 co-ordinates
6   scanf("%f%f%f%f",x1,x2,y1,y2);
(gdb) n
8
4
5
1
7   }
(gdb) n
main () at p1original.c:20
20    find_distance(x1,x2,y1,y2,&area);
(gdb) s
find_distance (x1=8, y1=5, x2=4, y2=1, area=0x7fffa8e8f614) at p1original.c:10
10    *area=sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));
(gdb) n
11  }
(gdb) n
main () at p1original.c:21
21    output(x1,x2,y1,y2,area);
(gdb) s
output (x1=8, y1=5, x2=4, y2=1, area=5.65685415) at p1original.c:14
14    printf("the distance between (%f,%f) and (%f,%f) is %f\n",x1,x2,y1,y2,area);
(gdb) print area
$1 = 5.65685415
(gdb) n
the distance between (8.000000,4.000000) and (5.000000,1.000000) is 5.656854
15  }
(gdb) n
main () at p1original.c:22
22    return 0;
(gdb) q
A debugging session is active.

    Inferior 1 [process 105] will be killed.

Quit anyway? (y or n) y
 
